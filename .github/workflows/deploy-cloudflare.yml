name: Deploy to Cloudflare Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      deployments: write
    
    steps:
      - uses: actions/checkout@v5
      
      # macOS Tart環境用: Homebrewの確認とNode.jsセットアップ
      - name: Check Node.js installation
        id: check-node
        run: |
          if command -v node &> /dev/null; then
            echo "Node.js $(node -v) is already installed"
            echo "skip_setup=true" >> $GITHUB_OUTPUT
          else
            echo "Node.js not found, will install"
            echo "skip_setup=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Install Node.js via Homebrew (if needed)
        if: steps.check-node.outputs.skip_setup == 'false'
        run: |
          # Homebrewがない場合はインストール
          if ! command -v brew &> /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          brew install node@20
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          check-latest: false
      
      - name: Install dependencies
        run: |
          # macOS環境でのnpmキャッシュ最適化
          npm config set cache ~/.npm-cache --global
          npm ci
      
      - name: Run tests
        run: npm test
        env:
          CI: true
      
      # Temporarily disabled due to existing lint errors (re-enable after fixing)
      # TODO: Fix lint errors and re-enable this check
      # - name: Run linting checks
      #   run: npm run lint
      
      - name: Run TypeScript type checking
        run: npm run type-check
      
      - name: Build
        run: npm run build
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NEXT_PUBLIC_APP_URL: https://cnd2-app.pages.dev
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # --commit-dirty=true: ビルドプロセスで生成されたファイル（out/ディレクトリ）を含めてデプロイ
          # --commit-message: UTF-8エンコーディング問題を回避するためASCII文字のみ使用
          # --commit-hash: Cloudflare側でデプロイを追跡するため明示的に指定
          command: pages deploy out --project-name=cnd2-app --commit-dirty=true --commit-message="Deploy from GitHub Actions - SHA ${{ github.sha }}" --commit-hash="${{ github.sha }}"